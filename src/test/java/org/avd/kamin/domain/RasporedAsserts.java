package org.avd.kamin.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class RasporedAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertRasporedAllPropertiesEquals(Raspored expected, Raspored actual) {
        assertRasporedAutoGeneratedPropertiesEquals(expected, actual);
        assertRasporedAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertRasporedAllUpdatablePropertiesEquals(Raspored expected, Raspored actual) {
        assertRasporedUpdatableFieldsEquals(expected, actual);
        assertRasporedUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertRasporedAutoGeneratedPropertiesEquals(Raspored expected, Raspored actual) {
        assertThat(expected)
            .as("Verify Raspored auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertRasporedUpdatableFieldsEquals(Raspored expected, Raspored actual) {
        assertThat(expected)
            .as("Verify Raspored relevant properties")
            .satisfies(e -> assertThat(e.getDatumUsluge()).as("check datumUsluge").isEqualTo(actual.getDatumUsluge()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertRasporedUpdatableRelationshipsEquals(Raspored expected, Raspored actual) {
        assertThat(expected)
            .as("Verify Raspored relationships")
            .satisfies(e -> assertThat(e.getGrad()).as("check grad").isEqualTo(actual.getGrad()))
            .satisfies(e -> assertThat(e.getNaselje()).as("check naselje").isEqualTo(actual.getNaselje()))
            .satisfies(e -> assertThat(e.getUlica()).as("check ulica").isEqualTo(actual.getUlica()));
    }
}
